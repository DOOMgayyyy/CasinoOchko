<?php

require_once('Card.php');

/**
 * Класс Deck - представляет колоду игральных карт
 * 
 * Управляет полной колодой из 52 карт (4 масти × 13 рангов).
 * Предоставляет функциональность для перемешивания, раздачи карт
 * и управления состоянием колоды.
 */
class Deck {
    /**
     * $cards - Массив карт в колоде
     */
    private $cards = [];
    
    /**
     * $suits - Массив всех мастей в колоде
     */
    private $suits = [
        'hearts',    # Черви
        'diamonds',  # Бубны
        'clubs',     # Трефы
        'spades'     # Пики
    ];
    
    /**
     * $ranks - Массив всех рангов карт в колоде
     */
    private $ranks = [
        'A',   # Туз
        '2',   # Двойка
        '3',   # Тройка
        '4',   # Четверка
        '5',   # Пятерка
        '6',   # Шестерка
        '7',   # Семерка
        '8',   # Восьмерка
        '9',   # Девятка
        '10',  # Десятка
        'J',   # Валет
        'Q',   # Дама
        'K'    # Король
    ];

    /**
     * Конструктор класса Deck
     * 
     * Автоматически создает полную колоду из 52 карт
     * при создании экземпляра класса.
     */
    public function __construct() {
        $this->createDeck();
    }

    /**
     * Создает полную колоду из 52 карт
     * 
     * Генерирует все возможные комбинации мастей и рангов,
     * создавая по одной карте каждого типа.
     * Очищает текущую колоду перед созданием новой.
     * 
     * @return void
     */
    private function createDeck() {
        $this->cards = [];
        
        # Создание карты для каждой масти
        foreach ($this->suits as $suit) {
            # Создание карты каждого ранга для текущей масти
            foreach ($this->ranks as $rank) {
                $this->cards[] = new Card($suit, $rank);
            }
        }
    }

    /**
     * Перемешивание карты в колоде
     * 
     * Использование встроенной функции PHP shuffle() для
     * случайного перемешивания порядка карт в колоде.
     * 
     * @return Deck Возвращает текущий экземпляр для цепочки вызовов
     */
    public function shuffle() {
        shuffle($this->cards);
        return $this;
    }

    /**
     * Вытягивание (раздача) одну карту из колоды
     * 
     * Удаление и возвращение последней карты из колоды.
     * Если колода пуста, возвращает null.
     * 
     * @return Card|null Вытянутая карта или null если колода пуста
     */
    public function draw() {
        if (empty($this->cards)) {
            return null; # Колода пуста - нечего раздавать
        }

        # Удаляем и возвращаем последнюю карту
        return array_pop($this->cards);
    }

    /**
     * Возвращает все карты в колоде
     * 
     * Предоставляет доступ к массиву всех карт в колоде
     * для просмотра или анализа без изменения колоды.
     * 
     * @return array Массив объектов Card
     */
    public function getCards() {
        return $this->cards;
    }

    /**
     * Возвращает количество карт в колоде
     * 
     * Подсчитывает и возвращает текущее количество
     * карт, оставшихся в колоде.
     * 
     * @return int Количество карт в колоде
     */
    public function getCount() {
        return count($this->cards);
    }

    /**
     * Сбрасывает колоду к исходному состоянию
     * 
     * Пересоздает полную колоду из 52 карт,
     * возвращая все ранее розданные карты обратно.
     * Карты не перемешиваются автоматически.
     * 
     * @return Deck Возвращает текущий экземпляр для цепочки вызовов
     */
    public function reset() {
        $this->createDeck();
        return $this;
    }
}